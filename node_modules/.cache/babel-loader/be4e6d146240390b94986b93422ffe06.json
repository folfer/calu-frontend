{"ast":null,"code":"import Shuttle from './shuttle';\nimport Obstacle from './obstacle'; // let p5 = require('p5/lib/addons/p5.sound');\n\nconst sketch = p => {\n  let stl;\n  let o;\n  let bg;\n  let end = true;\n  let intro = true;\n  let score = 0;\n  let obstacles = [];\n  let birdCollision;\n\n  p.setup = () => {\n    let canvasDiv = document.querySelector(\".game-container\");\n    let width = canvasDiv.offsetWidth;\n    let height = canvasDiv.offsetHeight;\n    p.createCanvas(width, height);\n    p.frameRate(30);\n    p.textSize(32);\n    bg = p.loadImage(require('../assets/background.svg')); // birdCollision = p5.loadSound(require('../assets/birdCollision.mp3'));\n\n    setInterval(() => {\n      if (obstacles.length < 3) {\n        obstacles.push(new Obstacle(p, score + 1));\n      }\n    }, 1500);\n  };\n\n  p.draw = () => {\n    p.background(bg);\n    p.fill(0);\n    p.stroke(255);\n\n    if (!end) {\n      stl.move(p); // o.move(p, score);\n\n      stl.drag(p);\n\n      if (!stl.isAlive(p)) {\n        end = true;\n      }\n\n      obstacles.forEach(obstacle => {\n        obstacle.render(p);\n        obstacle.move(p);\n        obstacle.offscreen(p);\n\n        if (stl.detectCollision(p, obstacle.pos, obstacle.size)) {\n          // birdCollision.play();\n          end = true;\n        }\n      }); // if (!o.isAlive(p)) {\n      //   o = new Obstacle(p);\n      // }\n\n      stl.render(p); // o.render(p);\n\n      score += 0.5;\n      p.fill(255);\n      p.textAlign(p.RIGHT);\n      p.text(p.int(score), p.width - 30, 58);\n    } else {\n      p.fill(255);\n      p.textAlign(p.CENTER);\n\n      if (intro) {\n        p.text(\"Clique para Jogar\", p.width / 2, 140);\n      } else {\n        p.text(\"Clique para Jogar\", p.width / 2, 140);\n        p.text(\"score\", p.width / 2, 240);\n        p.text(p.int(score), p.width / 2, 280);\n        obstacles = [];\n      }\n    }\n  };\n\n  p.reset = () => {\n    end = false;\n    score = 0;\n    stl = new Shuttle(p); // o = new Obstacle(p);\n  };\n\n  p.mouseClicked = () => {\n    intro = false;\n\n    if (end) {\n      p.reset(p);\n    }\n\n    stl.jump(p, p.mouseX, score);\n  };\n};\n\nexport default sketch;","map":{"version":3,"sources":["/home/folfer/iconlab/deploy-calu/calu-frontend/src/sketches/sketch.js"],"names":["Shuttle","Obstacle","sketch","p","stl","o","bg","end","intro","score","obstacles","birdCollision","setup","canvasDiv","document","querySelector","width","offsetWidth","height","offsetHeight","createCanvas","frameRate","textSize","loadImage","require","setInterval","length","push","draw","background","fill","stroke","move","drag","isAlive","forEach","obstacle","render","offscreen","detectCollision","pos","size","textAlign","RIGHT","text","int","CENTER","reset","mouseClicked","jump","mouseX"],"mappings":"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","sourcesContent":["\nimport Shuttle from './shuttle';\nimport Obstacle from './obstacle'\n\n// let p5 = require('p5/lib/addons/p5.sound');\n\nconst sketch = (p) => {\nlet stl;\nlet o;\nlet bg;\nlet end=true;\nlet intro=true;\nlet score=0;\nlet obstacles=[];\nlet birdCollision;\n\n p.setup = () => {\n  let canvasDiv = document.querySelector(\".game-container\");\n  let width = canvasDiv.offsetWidth;\n  let height = canvasDiv.offsetHeight;\n  p.createCanvas(width, height); \n  p.frameRate(30);\n  p.textSize(32);\n  bg = p.loadImage(require('../assets/background.svg'));\n  // birdCollision = p5.loadSound(require('../assets/birdCollision.mp3'));\n\n  setInterval(() => {\n    if (obstacles.length < 3) {\n      obstacles.push(new Obstacle(p, score+1));\n    }\n  }, 1500)\n}\n\np.draw = () => {\n  p.background(bg);\n  p.fill(0);\n  p.stroke(255);\n  if (!end) {\n    stl.move(p);\n    // o.move(p, score);\n    stl.drag(p);\n    \n    if(!stl.isAlive(p)) {\n      end = true;\n    }\n\n    obstacles.forEach(obstacle => {\n      obstacle.render(p);\n      obstacle.move(p);\n      obstacle.offscreen(p);\n      if(stl.detectCollision(p, obstacle.pos, obstacle.size)){\n        // birdCollision.play();\n        end = true;\n      }\n    });\n    \n    // if (!o.isAlive(p)) {\n    //   o = new Obstacle(p);\n    // }\n\n    stl.render(p);\n    // o.render(p);\n\n    score+= 0.5;\n    \n    p.fill(255);\n    p.textAlign(p.RIGHT);\n    p.text(p.int(score), p.width-30, 58);\n  } else {\n    p.fill(255);\n    p.textAlign(p.CENTER);\n    if (intro) {\n      p.text(\"Clique para Jogar\", p.width/2, 140);\n    } else {\n      p.text(\"Clique para Jogar\", p.width/2, 140);\n      p.text(\"score\", p.width/2, 240);\n      p.text(p.int(score), p.width/2, 280);\n      obstacles = [];\n    }\n  }\n}\n\n p.reset = () => {\n  end = false;\n  score=0;\n  stl = new Shuttle(p);\n  // o = new Obstacle(p);\n}\n\np.mouseClicked = () => {\n  intro=false;\n  if (end) {\n    p.reset(p);\n  }\n  stl.jump(p, p.mouseX, score);\n}\n}\n\nexport default sketch;"]},"metadata":{},"sourceType":"module"}